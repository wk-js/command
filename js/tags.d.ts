import { TagCondition, TagValue, Tags, Scalar, TagSequence } from "./types";
export declare const TAGS: string[];
export declare function validate(value: any, message: string, type?: "string" | "number" | "boolean" | "object" | "array"): void;
export declare function get_key(data: TagValue | TagCondition | TagSequence): keyof Tags;
export declare function has_key(data: any, key: string): any;
export declare function Any(data: TagValue | TagCondition | TagSequence): Scalar | Scalar[];
export declare function Scalar(data: TagValue | TagCondition): Scalar;
export declare function Sequence(data: TagSequence): Scalar[];
export declare function Split({ Split: [delimiter, value] }: Tags['Split']): Scalar[];
export declare function Value(data: TagValue): string | boolean;
export declare function If({ If: [condition, v0, v1] }: Tags['If']): Scalar;
export declare function Ref({ Ref }: Tags['Ref']): Scalar;
export declare function Select({ Select: [index, values] }: Tags['Select']): Scalar;
export declare function Sub({ Sub }: Tags['Sub']): Scalar;
export declare function Condition(data: TagCondition): Scalar;
export declare function Equals({ Equals: [v0, v1] }: Tags['Equals']): boolean;
export declare function DeepEquals({ DeepEquals: [v0, v1] }: Tags['DeepEquals']): boolean;
export declare function And({ And }: Tags['And']): boolean;
export declare function Or({ Or }: Tags['Or']): boolean;
export declare function Not({ Not }: Tags['Not']): boolean;
export declare function Empty({ Empty }: Tags['Empty']): boolean;
